UNIT LIBS;
INTERFACE
USES U_TOOL,CRT,DOS;
TYPE
   MEMBER_RECORD=RECORD
                 NAME     :STRING;
                 DOB      :DATE_TYPE;
                 ADD1,ADD2:STRING;
                 ID       :INTEGER;
                 END;
   MEMBER_FILETYPE=FILE OF MEMBER_RECORD;
   BOOK_RECORD=RECORD
                  NAME      :STRING;
                  AUTHOR    :STRING;
                  PUBLISHER :STRING;
                  PRICE     :STRING;
                  ID        :INTEGER;
                  EDITION   :INTEGER;
                  END;
   BOOK_FILETYPE=FILE OF BOOK_RECORD;
   ISSUE_RECORD=RECORD
                   M_NAME:STRING;
                   M_ID  :INTEGER;
                   B_NAME:STRING;
                   B_ID  :INTEGER;
                   DOI   :DATE_TYPE;
                   END;
    ISSUE_FILETYPE=FILE OF ISSUE_RECORD;
    EXPIRY_RECORD=RECORD
                   M_NAME:STRING;
                   M_ID  :INTEGER;
                   B_NAME:STRING;
                   B_ID  :INTEGER;
                   DOE   :DATE_TYPE;
                   END;
    EXPIRY_FILETYPE=FILE OF EXPIRY_RECORD;
VAR
MEMBER_FILE:MEMBER_FILETYPE;
BOOK_FILE:BOOK_FILETYPE;
ISSUE_FILE:ISSUE_FILETYPE;
EXPIRY_FILE:EXPIRY_FILETYPE;

PROCEDURE CREATE_EXPIRY;
PROCEDURE UPDATE_EXPIRY;

PROCEDURE INITIALIZE_BOOK(VAR REC:BOOK_RECORD);
PROCEDURE INITIALIZE_MEMBER(VAR REC:MEMBER_RECORD);
PROCEDURE INITIALIZE_ISSUE(VAR REC:ISSUE_RECORD);
PROCEDURE INITIALIZE_EXPIRY(VAR REC:EXPIRY_RECORD);

PROCEDURE DISPLAY_ISSUE(REC:ISSUE_RECORD);
PROCEDURE DISPLAY_BOOK(REC:BOOK_RECORD);
PROCEDURE DISPLAY_MEMBER(REC:MEMBER_RECORD);
PROCEDURE DISPLAY_EXPIRY(REC:EXPIRY_RECORD);

FUNCTION SEARCH_MEMBER(VAR M:MEMBER_FILETYPE;VAR REC:MEMBER_RECORD):BOOLEAN;
FUNCTION SEARCH_ISSUE(VAR I:ISSUE_FILETYPE;VAR REC:ISSUE_RECORD):BOOLEAN;
FUNCTION SEARCH_EXPIRY(VAR E:EXPIRY_FILETYPE;VAR REC:EXPIRY_RECORD):BOOLEAN;
FUNCTION SEARCH_BOOK(VAR B:BOOK_FILETYPE;VAR REC:BOOK_RECORD):BOOLEAN;

IMPLEMENTATION
VAR
FOUND:BOOLEAN;

R_MEMBER  :MEMBER_RECORD;
R_BOOK    :BOOK_RECORD;
R_ISSUE   :ISSUE_RECORD;
R_EXPIRY  :EXPIRY_RECORD;

PROCEDURE INITIALIZE_BOOK(VAR REC:BOOK_RECORD);
BEGIN
   WITH REC DO
  BEGIN
     NAME:='';
     AUTHOR:='';
     PUBLISHER:='';
     PRICE:='';
     ID:=0;
     EDITION:=0;
   END;
END;

PROCEDURE INITIALIZE_MEMBER(VAR REC:MEMBER_RECORD);
BEGIN
   WITH REC DO
  BEGIN
     NAME:='';
     ADD1:='';
     ADD2:='';
     ID:=0;
     WITH DOB DO
     BEGIN
     DATE:=0;
     MONTH:=0;
     YEAR:=0;
     END;
   END;
END;

PROCEDURE INITIALIZE_ISSUE(VAR REC:ISSUE_RECORD);
BEGIN
   WITH REC DO
  BEGIN
     M_NAME:='';
     M_ID:=0;
     B_NAME:='';
     B_ID:=0;
     WITH DOI DO
     BEGIN
     DATE:=0;
     MONTH:=0;
     YEAR:=0;
     END;
   END;
END;

PROCEDURE INITIALIZE_EXPIRY(VAR REC:EXPIRY_RECORD);
BEGIN
   WITH REC DO
  BEGIN
     M_NAME:='';
     M_ID:=0;
     B_NAME:='';
     B_ID:=0;
     WITH DOE DO
     BEGIN
     DATE:=0;
     MONTH:=0;
     YEAR:=0;
     END;
   END;
END;

PROCEDURE DISPLAY_EXPIRY(REC:EXPIRY_RECORD);
BEGIN
  BAR(4,8,74,19,WHITE);
  TEXTBACKGROUND(WHITE);
  TEXTCOLOR(BLACK);
  BOX(4,8,74,19,SINGLE_TYPE);
  TEXTCOLOR(BLACK+BLINK);
   GOTOXY(10,9);
   WRITE(' E  X  P  I  R  Y');
   TEXTCOLOR(BLACK);
  WINDOW(6,11,26,17);
    WRITELN('NAME OF MEMBER   :');
    WRITELN('MEMBERSHIP NO.   :');
    WRITELN('NAME OF BOOK     :');
    WRITELN('BOOK ID          :');
    WRITELN('DATE OF EXPIRY   :');

  TEXTBACKGROUND(BLACK);
  TEXTCOLOR(WHITE);
  WINDOW(27,11,70,15);
  CLRSCR;
    WRITELN(REC.M_NAME);
    IF REC.M_ID<>0 THEN     WRITELN(REC.M_ID);
    WRITELN(REC.B_NAME);
    IF REC.B_ID<>0 THEN     WRITELN(REC.B_ID);
    IF REC.DOE.DATE<>0 THEN WRITE(DT2ST(REC.DOE));
    WINDOW(1,1,80,25);
END;

PROCEDURE DISPLAY_ISSUE(REC:ISSUE_RECORD);
BEGIN
  BAR(4,8,74,19,WHITE);
  TEXTBACKGROUND(WHITE);
  TEXTCOLOR(BLACK);
  BOX(4,8,74,19,SINGLE_TYPE);
  TEXTCOLOR(BLACK+BLINK);
   GOTOXY(10,9);
   WRITE('I   S   S   U   E');
   TEXTCOLOR(BLACK);
  WINDOW(6,11,26,17);
    WRITELN('NAME OF MEMBER   :');
    WRITELN('MEMBERSHIP NO.   :');
    WRITELN('NAME OF BOOK     :');
    WRITELN('BOOK ID          :');
    WRITELN('DATE OF ISSUE    :');

  TEXTBACKGROUND(BLACK);
  TEXTCOLOR(WHITE);
  WINDOW(27,11,70,15);
  CLRSCR;
    WRITELN(REC.M_NAME);
    IF REC.M_ID<>0     THEN   WRITELN(REC.M_ID);
    WRITELN(REC.B_NAME);
    IF REC.B_ID<>0     THEN   WRITELN(REC.B_ID);
    IF REC.DOI.DATE<>0 THEN   WRITE(DT2ST(REC.DOI));
    WINDOW(1,1,80,25);
END;

PROCEDURE DISPLAY_BOOK(REC:BOOK_RECORD);
BEGIN
  BAR(4,8,74,20,WHITE);
  TEXTBACKGROUND(WHITE);
  TEXTCOLOR(BLACK);
  BOX(4,8,74,20,SINGLE_TYPE);
  TEXTCOLOR(BLACK+BLINK);
   GOTOXY(15,9);
   WRITE('  B    O    O    K');
   TEXTCOLOR(BLACK);
  WINDOW(6,11,26,18);
    WRITELN('NAME OF BOOK     :');
    WRITELN('NAME OF AUTHOR   :');
    WRITELN('PUBLISHER        :');
    WRITELN('PRICE            :');
    WRITELN('BOOK ID          :');
    WRITE  ('EDITION NUMBER   :');

  TEXTBACKGROUND(BLACK);
  TEXTCOLOR(WHITE);
  WINDOW(27,11,70,16);
  CLRSCR;
    WRITELN(REC.NAME);
    WRITELN(REC.AUTHOR);
    WRITELN(REC.PUBLISHER);
    WRITELN(REC.PRICE);
    IF REC.ID<>0      THEN WRITELN(REC.ID);
    IF REC.EDITION<>0 THEN WRITE  (REC.EDITION);
    WINDOW(1,1,80,25);
END;

PROCEDURE DISPLAY_MEMBER(REC:MEMBER_RECORD);
BEGIN
  BAR(4,8,74,19,WHITE);
  TEXTBACKGROUND(WHITE);
  TEXTCOLOR(BLACK);
  BOX(4,8,74,19,SINGLE_TYPE);
  TEXTCOLOR(BLACK+BLINK);
   GOTOXY(10,9);
   WRITE(' M  E  M  B  E  R');
   TEXTCOLOR(BLACK);
  WINDOW(6,11,26,17);
    WRITELN('NAME OF MEMBER   :');
    WRITELN('MEMBERSHIP NO.   :');
    WRITELN('ADDRESS          :');
    WRITELN;
    WRITELN('DATE OF BIRTH    :');

  TEXTBACKGROUND(BLACK);
  TEXTCOLOR(WHITE);
  WINDOW(27,11,70,15);
  CLRSCR;
    WRITELN(REC.NAME);
    IF REC.ID<>0       THEN WRITELN(REC.ID);
    WRITELN(REC.ADD1);
    WRITELN(REC.ADD2);
    IF REC.DOB.DATE<>0 THEN WRITE(DT2ST(REC.DOB));
    WINDOW(1,1,80,25);
END;

PROCEDURE CREATE_EXPIRY;
VAR  REC:ISSUE_RECORD;
     R:EXPIRY_RECORD;
     D,M,Y,DOM:WORD;
     P,Q:DATE_TYPE;
     N:CHAR;
BEGIN
  RESET(ISSUE_FILE);
  REWRITE(EXPIRY_FILE);
  GETDATE(D,M,Y,DOM);
    WHILE NOT EOF(ISSUE_FILE) DO
    BEGIN
         READ(ISSUE_FILE,REC);
       P:=REC.DOI;
       FIND_DATE(P,14);
       Q.DATE:=D;
       Q.MONTH:=M;
       Q.YEAR:=Y;
       IF NOT CHECK_DATE(P,Q,N) THEN
        IF N='G' THEN
        BEGIN
             R.M_NAME:=REC.M_NAME;
             R.M_ID:=REC.M_ID;
             R.B_NAME:=REC.B_NAME;
             R.B_ID:=REC.B_ID;
             R.DOE:=P;
             WRITE(EXPIRY_FILE,R);
        END;
    END;
       CLOSE(ISSUE_FILE);
       CLOSE(EXPIRY_FILE);
END;

PROCEDURE UPDATE_EXPIRY;
VAR  REC:ISSUE_RECORD;
     R:EXPIRY_RECORD;
     T:EXPIRY_FILETYPE;
     D,M,Y,DOM:WORD;
     P,Q:DATE_TYPE;
     N:CHAR;
BEGIN
 IF PRESENT('EXPIRY.DAT') THEN
 BEGIN
  ASSIGN(T,'TEMP.DAT');
  REWRITE(T);
  RESET(EXPIRY_FILE);
  WHILE NOT EOF(EXPIRY_FILE) DO
  BEGIN
   READ(EXPIRY_FILE,R);
   RESET(ISSUE_FILE);
   INITIALIZE_ISSUE(REC);
   REC.B_ID:=R.B_ID;
   IF  SEARCH_ISSUE(ISSUE_FILE,REC) THEN
    WRITE(T,R);
   END;
   CLOSE(T);
   CLOSE(EXPIRY_FILE);
   COPYFILE('TEMP.DAT','EXPIRY.DAT');
  RESET(ISSUE_FILE);
  RESET(EXPIRY_FILE);
  SEEK(EXPIRY_FILE,FILESIZE(EXPIRY_FILE));
  GETDATE(D,M,Y,DOM);
    WHILE NOT EOF(ISSUE_FILE) DO
    BEGIN
       READ(ISSUE_FILE,REC);
       P:=REC.DOI;
       FIND_DATE(P,14);
       Q.DATE:=D;
       Q.MONTH:=M;
       Q.YEAR:=Y;
       IF NOT CHECK_DATE(P,Q,N) THEN
        IF N='G' THEN
        BEGIN
             R.M_NAME:=REC.M_NAME;
             R.M_ID:=REC.M_ID;
             R.B_NAME:=REC.B_NAME;
             R.B_ID:=REC.B_ID;
             R.DOE:=P;
             WRITE(EXPIRY_FILE,R);
        END;
    END;
       CLOSE(ISSUE_FILE);
       CLOSE(EXPIRY_FILE);
  END
  ELSE
  CREATE_EXPIRY;
END;

FUNCTION SEARCH_MEMBER(VAR M:MEMBER_FILETYPE;
                       VAR REC:MEMBER_RECORD):BOOLEAN;
VAR
      R:MEMBER_RECORD;
      N:CHAR;
BEGIN
     FOUND:=FALSE;
     WHILE (NOT EOF(M)) AND (NOT FOUND) DO
    BEGIN
     READ(M,R);
     IF REC.NAME<>'' THEN
      FOUND:=SAME_STRING(REC.NAME,R.NAME)
     ELSE
     IF REC.DOB.DATE<>0 THEN
     FOUND:=CHECK_DATE(REC.DOB,R.DOB,N)
     ELSE
     IF REC.ID<>0 THEN
     FOUND:=(REC.ID=R.ID)
    END;{WHILE}
    IF FOUND THEN REC:=R;
    SEARCH_MEMBER:=FOUND;
END;

FUNCTION SEARCH_ISSUE(VAR I:ISSUE_FILETYPE;VAR REC:ISSUE_RECORD):BOOLEAN;
VAR R:ISSUE_RECORD;
  N:CHAR;
BEGIN
      FOUND:=FALSE;
      WHILE (NOT EOF(I)) AND (NOT FOUND) DO
 BEGIN
      READ(I,R);
      IF REC.B_NAME<>'' THEN
      FOUND:=SAME_STRING(REC.B_NAME,R.B_NAME)
      ELSE
     IF REC.DOI.DATE<>0 THEN
     FOUND:=CHECK_DATE(REC.DOI,R.DOI,N)
     ELSE
     IF REC.M_NAME<>'' THEN
     FOUND:=SAME_STRING(REC.M_NAME,R.M_NAME)
     ELSE
     IF REC.M_ID<>0 THEN
     FOUND:=(REC.M_ID=R.M_ID)
     ELSE
     IF REC.B_ID<>0 THEN
     FOUND:=(REC.B_ID=R.B_ID);
 END;
   IF FOUND THEN REC:=R;
    SEARCH_ISSUE:=FOUND;
END;

FUNCTION SEARCH_EXPIRY(VAR E:EXPIRY_FILETYPE;VAR REC:EXPIRY_RECORD):BOOLEAN;
VAR R:EXPIRY_RECORD;
  N:CHAR;
BEGIN
      FOUND:=FALSE;
      WHILE (NOT EOF(E)) AND (NOT FOUND) DO
 BEGIN
       READ(E,R);
      IF REC.B_NAME<>'' THEN
      FOUND:=SAME_STRING(REC.B_NAME,R.B_NAME)
     ELSE
     IF REC.DOE.DATE<>0 THEN
     FOUND:=CHECK_DATE(REC.DOE,R.DOE,N)
     ELSE
     IF REC.M_NAME<>'' THEN
     FOUND:=SAME_STRING(REC.M_NAME,R.M_NAME)
     ELSE
     IF REC.M_ID<>0 THEN
     FOUND:=(REC.M_ID=R.M_ID)
     ELSE
     IF REC.B_ID<>0 THEN
     FOUND:=(REC.B_ID=R.B_ID);
 END;
   IF FOUND THEN REC:=R;
    SEARCH_EXPIRY:=FOUND;
END;

FUNCTION SEARCH_BOOK(VAR B:BOOK_FILETYPE;VAR REC:BOOK_RECORD):BOOLEAN;
VAR R:BOOK_RECORD;
BEGIN
      FOUND:=FALSE;
      WHILE (NOT EOF(B)) AND (NOT FOUND) DO
 BEGIN
       READ(B,R);
      IF REC.NAME<>'' THEN
      FOUND:=SAME_STRING(REC.NAME,R.NAME)
     ELSE
     IF REC.ID<>0 THEN
     FOUND:=(REC.ID=R.ID)
     ELSE
     IF REC.AUTHOR<>'' THEN
     FOUND:=SAME_STRING(REC.AUTHOR,R.AUTHOR)
 END;
   IF FOUND THEN REC:=R;
    SEARCH_BOOK:=FOUND;
END;
BEGIN
ASSIGN(MEMBER_FILE,'MEMBER.DAT');
ASSIGN(BOOK_FILE,'BOOK.DAT');
ASSIGN(ISSUE_FILE,'ISSUE.DAT');
ASSIGN(EXPIRY_FILE,'EXPIRY.DAT');

IF NOT PRESENT('MEMBER.DAT') THEN
BEGIN REWRITE(MEMBER_FILE); CLOSE(MEMBER_FILE); END;

IF NOT PRESENT('BOOK.DAT') THEN
BEGIN REWRITE(BOOK_FILE);   CLOSE(BOOK_FILE);  END;

IF NOT PRESENT('ISSUE.DAT') THEN
BEGIN REWRITE(ISSUE_FILE);  CLOSE(ISSUE_FILE);  END;

IF NOT PRESENT('EXPIRY.DAT') THEN
BEGIN REWRITE(EXPIRY_FILE); CLOSE(EXPIRY_FILE);  END;
END.